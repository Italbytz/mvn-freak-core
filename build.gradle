plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.italbytz'
version '0.4.6'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jdom:jdom:b9'
    implementation 'colt:colt:1.2.0'
    implementation 'org.apache-extras.beanshell:bsh:2.0b6'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'freak-core'
                description = 'Core library of the Free Evolutionary Algorithm Toolkit'
                url = 'https://github.com/Italbytz/mvn-freak-core'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Robin Nunkesser'
                        email = 'robin.nunkesser@hshl.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Italbytz/mvn-freak-core.git'
                    developerConnection = 'scm:git:ssh://github.com/Italbytz/mvn-freak-core.git'
                    url = 'https://github.com/Italbytz/mvn-freak-core.git'
                }
            }
        }
    }

    repositories {
        maven {
            name="oss"
            def releasesRepoUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            def snapshotsRepoUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }

}

signing {
    sign(publishing.publications)
}


